{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport challeges from \"../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setcurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengeCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var ramdomChallengeIndex = Math.floor(Math.random() * challeges.length);\n    var challege = challeges[ramdomChallengeIndex];\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengeCompleted: challengeCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"kX8PHKtZDnnsEm6qYpe7MQkVkQk=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challeges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setcurrentExperience","challengeCompleted","setChallengesCompleted","levelUp","startNewChallenge","ramdomChallengeIndex","Math","floor","random","length","challege"],"mappings":";;;;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAkD,OAAlD;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAgBA,OAAO,IAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBACzCJ,QAAQ,CAAC,CAAD,CADiC;AAAA,MAC5DK,KAD4D;AAAA,MACrDC,QADqD;;AAAA,mBAEjBN,QAAQ,CAAC,CAAD,CAFS;AAAA,MAE5DO,iBAF4D;AAAA,MAEzCC,oBAFyC;;AAAA,mBAGdR,QAAQ,CAAC,CAAD,CAHM;AAAA,MAG5DS,kBAH4D;AAAA,MAGxCC,sBAHwC;;AAKrE,WAASC,OAAT,GAAkB;AAChBL,IAAAA,QAAQ,CAAED,KAAK,GAAG,CAAV,CAAR;AACD;;AAED,WAASO,iBAAT,GAA4B;AACxB,QAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,SAAS,CAACgB,MAArC,CAA7B;AACA,QAAMC,QAAQ,GAAGjB,SAAS,CAACY,oBAAD,CAA1B;AACH;;AAEC,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACR,MAAAA,KAAK,EAALA,KAAD;AAAOE,MAAAA,iBAAiB,EAAjBA,iBAAP;AAA0BE,MAAAA,kBAAkB,EAAlBA,kBAA1B;AAA8CE,MAAAA,OAAO,EAAPA,OAA9C;AAAsDC,MAAAA,iBAAiB,EAAjBA;AAAtD,KAAnC;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnBeD,kB;;KAAAA,kB","sourcesContent":["import {createContext, useState, ReactNode } from 'react';\nimport challeges from \"../challenges.json\";\n\n\n\ninterface ChallengesContextData{\n    level : number;\n    currentExperience: number;\n    challengeCompleted: number;\n    levelUp:() => void;\n    startNewChallenge: () => void;\n}\n\ninterface ChallengesProviderProps{\n    children:ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({children}: ChallengesProviderProps){\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setcurrentExperience] = useState(0);\n    const [challengeCompleted, setChallengesCompleted] = useState(0);\n\n  function levelUp(){\n    setLevel (level + 1);\n  }\n\n  function startNewChallenge(){\n      const ramdomChallengeIndex = Math.floor(Math.random() * challeges.length);\n      const challege = challeges[ramdomChallengeIndex];\n  }\n\n    return (\n        <ChallengesContext.Provider value={{level,currentExperience, challengeCompleted, levelUp,startNewChallenge}}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}