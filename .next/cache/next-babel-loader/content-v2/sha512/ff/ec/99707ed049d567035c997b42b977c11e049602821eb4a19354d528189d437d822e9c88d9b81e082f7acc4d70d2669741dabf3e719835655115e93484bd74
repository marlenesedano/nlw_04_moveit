{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setcurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var ramdomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[ramdomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setcurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengeCompleted: challengeCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"epHti/mc52kOTZYJcgIJQNXpFTE=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setcurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","ramdomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience","challengeCompleted"],"mappings":"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","sourcesContent":["import {createContext, useState, ReactNode, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from \"../../challenges.json\";\n\ninterface Challenge{\n    type : 'body' | 'eye';\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContextData{\n    level : number;\n    currentExperience: number;\n    challengeCompleted: number;\n    experienceToNextLevel: number;\n    activeChallenge: Challenge;\n    levelUp:() => void;\n    startNewChallenge: () => void;\n    resetChallenge :  () => void;\n    completeChallenge : () => void;\n}\n\n\ninterface ChallengesProviderProps{\n    children:ReactNode;\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({\n    children,\n    ...rest\n}: ChallengesProviderProps){\n    const [level, setLevel] = useState(rest.level ?? 1);\n    const [currentExperience, setcurrentExperience] = useState(rest.currentExperience ?? 0);\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\n    const [activeChallenge, setActiveChallenge] = useState(null);\n\n    const experienceToNextLevel = Math.pow((level + 1)* 4,2)\n\n\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, [])\n\n    useEffect(() => {\n        Cookies.set('level', String(level));\n        Cookies.set('currentExperience', String(currentExperience));\n        Cookies.set('challengesCompleted', String(challengesCompleted));\n    }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp(){\n    setLevel (level + 1);  \n  }\n\n  function startNewChallenge(){\n      const ramdomChallengeIndex = Math.floor(Math.random() * challenges.length)\n      const challenge = challenges[ramdomChallengeIndex];\n      setActiveChallenge(challenge)\n\n      new Audio('/notification.mp3').play()\n\n      if(Notification.permission === 'granted'){\n          new Notification ('Novo desafio' ,{\n              body: `Valendo ${challenge.amount} xp!`\n          })\n      }\n  }\n\n  function resetChallenge(){\n      setActiveChallenge(null);\n  }\n\n  function completeChallenge(){\n    if(!activeChallenge){\n        return;\n    }\n    const {amount} = activeChallenge;\n    let finalExperience = currentExperience + amount;\n    if(finalExperience >= experienceToNextLevel){\n        finalExperience = finalExperience - experienceToNextLevel;\n        levelUp();\n    }\n    setcurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n    return (\n        <ChallengesContext.Provider \n        value={{\n                level,\n                currentExperience,\n                challengeCompleted,\n                levelUp,\n                startNewChallenge,\n                activeChallenge,\n                resetChallenge,\n                experienceToNextLevel,\n                completeChallenge,\n            }}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}