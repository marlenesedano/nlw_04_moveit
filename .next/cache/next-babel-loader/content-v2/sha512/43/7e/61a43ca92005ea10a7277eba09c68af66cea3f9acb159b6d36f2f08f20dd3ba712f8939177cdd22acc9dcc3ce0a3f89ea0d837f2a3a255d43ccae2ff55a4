{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from \"../../challenges.json\";\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setcurrentExperience\n  } = useState(0);\n  const {\n    0: challengeCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', level);\n  }, [level, currentExperience, challengeCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const ramdomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[ramdomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: `Valendo ${challenge.amount} xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setcurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengeCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengeCompleted,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setcurrentExperience","challengeCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","levelUp","startNewChallenge","ramdomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import {createContext, useState, ReactNode, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from \"../../challenges.json\";\n\ninterface Challenge{\n    type : 'body' | 'eye';\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContextData{\n    level : number;\n    currentExperience: number;\n    challengeCompleted: number;\n    experienceToNextLevel: number;\n    activeChallenge: Challenge;\n    levelUp:() => void;\n    startNewChallenge: () => void;\n    resetChallenge :  () => void;\n    completeChallenge : () => void;\n}\n\ninterface ChallengesProviderProps{\n    children:ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({children}: ChallengesProviderProps){\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setcurrentExperience] = useState(0);\n    const [challengeCompleted, setChallengesCompleted] = useState(0);\n    const [activeChallenge, setActiveChallenge] = useState(null);\n\n    const experienceToNextLevel = Math.pow((level + 1)* 4,2)\n\n\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, [])\n\n    useEffect(() => {\n        Cookies.set('level', level);\n    }, [level, currentExperience, challengeCompleted]);\n\n  function levelUp(){\n    setLevel (level + 1);  \n  }\n\n  function startNewChallenge(){\n      const ramdomChallengeIndex = Math.floor(Math.random() * challenges.length)\n      const challenge = challenges[ramdomChallengeIndex];\n      setActiveChallenge(challenge)\n\n      new Audio('/notification.mp3').play()\n\n      if(Notification.permission === 'granted'){\n          new Notification ('Novo desafio' ,{\n              body: `Valendo ${challenge.amount} xp!`\n          })\n      }\n  }\n\n  function resetChallenge(){\n      setActiveChallenge(null);\n  }\n\n  function completeChallenge(){\n    if(!activeChallenge){\n        return;\n    }\n    const {amount} = activeChallenge;\n    let finalExperience = currentExperience + amount;\n    if(finalExperience >= experienceToNextLevel){\n        finalExperience = finalExperience - experienceToNextLevel;\n        levelUp();\n    }\n    setcurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengeCompleted + 1);\n  }\n\n    return (\n        <ChallengesContext.Provider \n        value={{\n                level,\n                currentExperience,\n                challengeCompleted,\n                levelUp,\n                startNewChallenge,\n                activeChallenge,\n                resetChallenge,\n                experienceToNextLevel,\n                completeChallenge,\n            }}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}