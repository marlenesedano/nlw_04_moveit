{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/components/Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.1 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  cons[(hasFinished, setHasFinished)] = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 8\n  }, this);\n}","map":{"version":3,"sources":["/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","cons","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAGA,IAAIC,gBAAJ;AAGA,OAAO,SAASC,SAAT,GAAoB;AAEvB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,MAAM,EAAP,CAAhC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACAS,EAAAA,IAAI,EAAEC,WAAW,EAAEC,cAAf,EAAJ,GAAqCX,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAMY,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWT,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMU,OAAO,GAAGV,IAAI,GAAG,EAAvB;AAEA,QAAM,CAACW,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;;AAEA,WAASG,cAAT,GAAyB;AACrBf,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASgB,cAAT,GAAyB;AACrBC,IAAAA,YAAY,CAACtB,gBAAD,CAAZ;AACAK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAK,EAAN,CAAP;AACH;;AAEDL,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGM,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAyB;AACrBF,MAAAA,gBAAgB,GAAGuB,UAAU,CAAC,MAAI;AAC9BpB,QAAAA,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAGE,QAAQ,IAAIF,IAAI,KAAK,CAAxB,EAA0B;AAC7BM,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEH;AACJ,GATQ,EASN,CAACJ,QAAD,EAAWF,IAAX,CATM,CAAT;AAWA,sBACG;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACyB,kBAAvB;AAAA,8BACC;AAAA,gCACI;AAAA,oBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAMC;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaEf,QAAQ,gBACL;AAAQ,MAAA,IAAI,EAAC,QAAb;AACA,MAAA,SAAS,EAAG,GAAEL,MAAM,CAAC0B,eAAgB,IAAG1B,MAAM,CAAC2B,qBAAsB,EADrE;AAEI,MAAA,OAAO,EAAIL,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBASL;AAAQ,MAAA,IAAI,EAAC,QAAb;AACA,MAAA,SAAS,EAAEtB,MAAM,CAAC0B,eADlB;AAEI,MAAA,OAAO,EAAIL,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAiCH","sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\n\n\nlet countdownTimeout: NodeJS.Timeout;\n\n\nexport function Countdown(){\n\n    const [time, setTime] = useState(0.1 * 60);\n    const [isActive, setIsActive] = useState(false);\n    cons [hasFinished, setHasFinished] = useState(false);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n    function startCountdown(){\n        setIsActive(true);\n    }\n\n    function resetCountdown(){\n        clearTimeout(countdownTimeout);\n        setIsActive(false);\n        setTime(0.1 *60);\n    }\n\n    useEffect(() =>{\n        if(isActive && time > 0 ){\n            countdownTimeout = setTimeout(()=>{\n                setTime(time -1);\n            }, 1000)\n        } else if(isActive && time === 0){\n            setHasFinished(true);\n            \n        }\n    }, [isActive, time]);\n\n    return(\n       <div>\n           <div className={styles.countdownContainer}>\n            <div>\n                <span>{minuteLeft}</span>\n                <span>{minuteRight}</span>\n            </div>\n            <span>:</span>\n            <div>\n                <span>{secondLeft}</span>\n                <span>{secondRight}</span>\n           </div>\n          </div>\n\n        {isActive ? (\n            <button type=\"button\" \n            className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                onClick = {resetCountdown}\n            >\n            Abandonar ciclo\n            \n          </button>\n        ) : (\n            <button type=\"button\" \n            className={styles.countdownButton}\n                onClick = {startCountdown}\n            >\n            Iniciar um ciclo\n            \n          </button>\n        )}\n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}