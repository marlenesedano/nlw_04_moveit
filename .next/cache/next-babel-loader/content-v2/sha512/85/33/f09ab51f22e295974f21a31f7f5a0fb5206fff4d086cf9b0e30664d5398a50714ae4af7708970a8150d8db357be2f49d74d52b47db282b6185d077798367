{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nvar countdownTimeout;\nexport var CountdownContext = /*#__PURE__*/createContext({});\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setHasFinished(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"gOwweAy347QjoNh2krWNMVrWZHE=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","countdownTimeout","CountdownContext","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AACA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,IAAIC,gBAAJ;AAeA,OAAO,IAAMC,gBAAgB,gBAAGN,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASO,iBAAT,OAA8D;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;;AAAA,oBAEpCP,UAAU,CAACG,iBAAD,CAF0B;AAAA,MAE1DK,iBAF0D,eAE1DA,iBAF0D;;AAAA,kBAIzCN,QAAQ,CAAC,KAAK,EAAN,CAJiC;AAAA,MAI1DO,IAJ0D;AAAA,MAIpDC,OAJoD;;AAAA,mBAKjCR,QAAQ,CAAC,KAAD,CALyB;AAAA,MAK1DS,QAL0D;AAAA,MAKhDC,WALgD;;AAAA,mBAM3BV,QAAQ,CAAC,KAAD,CANmB;AAAA,MAM1DW,WAN0D;AAAA,MAM7CC,cAN6C;;AAQjE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAAyB;AACrBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASQ,cAAT,GAAyB;AACrBC,IAAAA,YAAY,CAACjB,gBAAD,CAAZ;AACAQ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,IAAAA,OAAO,CAAC,MAAK,EAAN,CAAP;AACH;;AAEDT,EAAAA,SAAS,CAAC,YAAK;AACX,QAAGU,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAyB;AACrBL,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,YAAI;AAC9BZ,QAAAA,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAGE,QAAQ,IAAIF,IAAI,KAAK,CAAxB,EAA0B;AAC7BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AAEpB;AACJ,GAXQ,EAWN,CAACG,QAAD,EAAWF,IAAX,CAXM,CAAT;AAaA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BM,MAAAA,OAAO,EAAPA,OAD8B;AAE9BG,MAAAA,OAAO,EAAPA,OAF8B;AAG9BL,MAAAA,WAAW,EAAXA,WAH8B;AAI9BF,MAAAA,QAAQ,EAARA,QAJ8B;AAK9BQ,MAAAA,cAAc,EAAdA,cAL8B;AAM9BC,MAAAA,cAAc,EAAdA;AAN8B,KAAlC;AAAA,cAQKb;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA/CeD,iB;;KAAAA,iB","sourcesContent":["\nimport { createContext, ReactNode, useContext, useEffect, useState } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\n\nlet countdownTimeout: NodeJS.Timeout;\n\ninterface CountdownContextData{\n    minutes: number;\n    seconds: number;\n    hasFinished: boolean;\n    isActive: boolean;\n    startCountdown: () => void;\n    resetCountdown: () => void;\n}\n\ninterface CountdownProviderProps{\n    children: ReactNode;\n}\n\nexport const CountdownContext = createContext({} as CountdownContextData)\n\nexport function CountdownProvider({children}: CountdownProviderProps){\n\n    const {startNewChallenge } = useContext(ChallengesContext)\n\n    const [time, setTime] = useState(25 * 60);\n    const [isActive, setIsActive] = useState(false);\n    const [hasFinished, setHasFinished] = useState(false);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    function startCountdown(){\n        setIsActive(true);\n    }\n\n    function resetCountdown(){\n        clearTimeout(countdownTimeout);\n        setIsActive(false);\n        setHasFinished(false);\n        setTime(0.1 *60);\n    }\n\n    useEffect(() =>{\n        if(isActive && time > 0 ){\n            countdownTimeout = setTimeout(()=>{\n                setTime(time -1);\n            }, 1000)\n        } else if(isActive && time === 0){\n            setHasFinished(true);\n            setIsActive(false);\n            startNewChallenge();\n            \n        }\n    }, [isActive, time]);\n\n    return(\n        <CountdownContext.Provider value={{\n            minutes,\n            seconds,\n            hasFinished,\n            isActive,\n            startCountdown,\n            resetCountdown,\n        }}>\n            {children}\n        </CountdownContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}