{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setcurrentExperience\n  } = useState(0);\n  const [challengeCompleted, setChallengesCompleted];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setcurrentExperience","challengeCompleted","setChallengesCompleted","levelUp"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAkD,OAAlD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,CAA4B;AAACC,EAAAA;AAAD,CAA5B,EAAgE;AACnE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACM,iBAAD;AAAA,OAAoBC;AAApB,MAA4CP,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAACQ,kBAAD,EAAqBC,sBAArB,CAAN;;AAEF,WAASC,OAAT,GAAkB;AAChBL,IAAAA,QAAQ,CAAED,KAAK,GAAG,CAAV,CAAR;AACD;;AAEC,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAD;AAAQM,MAAAA;AAAR,KAAnC;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH","sourcesContent":["import {createContext, useState, ReactNode } from 'react';\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallengesProviderProps{\n    children:ReactNode;\n}\n\nexport function ChallengesProvider({children}: ChallengesProviderProps){\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setcurrentExperience] = useState(0);\n    const [challengeCompleted, setChallengesCompleted]\n\n  function levelUp(){\n    setLevel (level + 1);\n  }\n\n    return (\n        <ChallengesContext.Provider value={{level, levelUp}}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}