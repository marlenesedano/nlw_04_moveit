{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setcurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengeCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var ramdomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[ramdomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengeCompleted: challengeCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"7PSMPG/mgoA94/udH2RsqEGSghA=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/media/marlene/Novo volume/NLW_04_Moveit/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setcurrentExperience","challengeCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","levelUp","startNewChallenge","ramdomChallengeIndex","floor","random","length","challenge","resetChallenge","completeChallenge","amount","finalExperience"],"mappings":";;;;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAkD,OAAlD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBACzCJ,QAAQ,CAAC,CAAD,CADiC;AAAA,MAC5DK,KAD4D;AAAA,MACrDC,QADqD;;AAAA,mBAEjBN,QAAQ,CAAC,CAAD,CAFS;AAAA,MAE5DO,iBAF4D;AAAA,MAEzCC,oBAFyC;;AAAA,mBAGdR,QAAQ,CAAC,CAAD,CAHM;AAAA,MAG5DS,kBAH4D;AAAA,MAGxCC,sBAHwC;;AAAA,mBAIrBV,QAAQ,CAAC,IAAD,CAJa;AAAA,MAI5DW,eAJ4D;AAAA,MAI3CC,kBAJ2C;;AAMnE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAa,CAAtB,EAAwB,CAAxB,CAA9B;;AAEF,WAASW,OAAT,GAAkB;AAChBV,IAAAA,QAAQ,CAAED,KAAK,GAAG,CAAV,CAAR;AACD;;AAED,WAASY,iBAAT,GAA4B;AACxB,QAAMC,oBAAoB,GAAGJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACM,MAAL,KAAgBnB,UAAU,CAACoB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGrB,UAAU,CAACiB,oBAAD,CAA5B;AACAN,IAAAA,kBAAkB,CAACU,SAAD,CAAlB;AACH;;AAED,WAASC,cAAT,GAAyB;AACrBX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASY,iBAAT,GAA4B;AAC1B,QAAG,CAACb,eAAJ,EAAoB;AAChB;AACH;;AAHyB,QAInBc,MAJmB,GAITd,eAJS,CAInBc,MAJmB;AAK1B,QAAIC,eAAe,GAAGnB,iBAAiB,GAAGkB,MAA1C;;AACA,QAAGC,eAAe,IAAIb,qBAAtB,EAA4C;AACxCa,MAAAA,eAAe,GAAGA,eAAe,GAAGb,qBAApC;AACAG,MAAAA,OAAO;AACV;AACF;;AAEC,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACCX,MAAAA,KAAK,EAALA,KADD;AAECE,MAAAA,iBAAiB,EAAjBA,iBAFD;AAGCE,MAAAA,kBAAkB,EAAlBA,kBAHD;AAICO,MAAAA,OAAO,EAAPA,OAJD;AAKCC,MAAAA,iBAAiB,EAAjBA,iBALD;AAMCN,MAAAA,eAAe,EAAfA,eAND;AAOCY,MAAAA,cAAc,EAAdA,cAPD;AAQCV,MAAAA,qBAAqB,EAArBA,qBARD;AASCW,MAAAA,iBAAiB,EAAjBA;AATD,KADP;AAAA,cAYKpB;AAZL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAlDeD,kB;;KAAAA,kB","sourcesContent":["import {createContext, useState, ReactNode } from 'react';\nimport challenges from \"../../challenges.json\";\n\ninterface Challenge{\n    type : 'body' | 'eye';\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContextData{\n    level : number;\n    currentExperience: number;\n    challengeCompleted: number;\n    experienceToNextLevel: number;\n    activeChallenge: Challenge;\n    levelUp:() => void;\n    startNewChallenge: () => void;\n    resetChallenge :  () => void;\n    completeChallenge : () => void;\n}\n\ninterface ChallengesProviderProps{\n    children:ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({children}: ChallengesProviderProps){\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setcurrentExperience] = useState(0);\n    const [challengeCompleted, setChallengesCompleted] = useState(0);\n    const [activeChallenge, setActiveChallenge] = useState(null);\n\n    const experienceToNextLevel = Math.pow((level + 1)* 4,2)\n\n  function levelUp(){\n    setLevel (level + 1);  \n  }\n\n  function startNewChallenge(){\n      const ramdomChallengeIndex = Math.floor(Math.random() * challenges.length)\n      const challenge = challenges[ramdomChallengeIndex];\n      setActiveChallenge(challenge)\n  }\n\n  function resetChallenge(){\n      setActiveChallenge(null);\n  }\n\n  function completeChallenge(){\n    if(!activeChallenge){\n        return;\n    }\n    const {amount} = activeChallenge;\n    let finalExperience = currentExperience + amount;\n    if(finalExperience >= experienceToNextLevel){\n        finalExperience = finalExperience - experienceToNextLevel;\n        levelUp();\n    }\n  }\n\n    return (\n        <ChallengesContext.Provider \n        value={{\n                level,\n                currentExperience,\n                challengeCompleted,\n                levelUp,\n                startNewChallenge,\n                activeChallenge,\n                resetChallenge,\n                experienceToNextLevel,\n                completeChallenge,\n            }}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}